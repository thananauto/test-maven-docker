<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" ignored="6" total="18" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="rest assured Practice Suite" duration-ms="8249" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:28 IST">
    <groups>
    </groups>
    <test name="Test Basics 1" duration-ms="8249" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:28 IST">
      <class name="com.qa.tests.PutTests">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.PutTests@52feb982]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.PutTests.putUpdateUserPojo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="putUpdateUserPojo()[pri:0, instance:com.qa.tests.PutTests@52feb982]" name="putUpdateUserPojo" duration-ms="2259" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:27 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$11.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:101)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at com.qa.tests.PutTests.putUpdateUserPojo(PutTests.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putUpdateUserPojo -->
        <test-method status="PASS" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:com.qa.tests.PutTests@52feb982]" name="afterMethods" is-config="true" duration-ms="1" started-at="2023-07-21T18:08:27 IST" finished-at="2023-07-21T18:08:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=putUpdateUserPojo status=FAILURE method=PutTests.putUpdateUserPojo()[pri:0, instance:com.qa.tests.PutTests@52feb982] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
      </class> <!-- com.qa.tests.PutTests -->
      <class name="com.qa.tests.PostTests">
        <test-method status="PASS" signature="postCreateUserJsonObject()[pri:0, instance:com.qa.tests.PostTests@34c4973]" name="postCreateUserJsonObject" duration-ms="2431" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCreateUserJsonObject -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.PostTests@34c4973]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.PostTests.postCreateUserJsonObject()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="postCreateUserPojo()[pri:0, instance:com.qa.tests.PostTests@34c4973]" name="postCreateUserPojo" duration-ms="2400" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCreateUserPojo -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.PostTests@34c4973]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.PostTests.postCreateUserPojo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.PostTests@34c4973]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.PostTests.postCreateUserWithMap()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="postCreateUserWithMap()[pri:0, instance:com.qa.tests.PostTests@34c4973]" name="postCreateUserWithMap" duration-ms="2289" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCreateUserWithMap -->
        <test-method status="FAIL" signature="postCreateUserWithString()[pri:0, instance:com.qa.tests.PostTests@34c4973]" name="postCreateUserWithString" duration-ms="1665" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:27 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <422>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <422>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$11.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:101)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at com.qa.tests.PostTests.postCreateUserWithString(PostTests.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCreateUserWithString -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.PostTests@34c4973]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.PostTests.postCreateUserWithString()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:com.qa.tests.PostTests@34c4973]" name="afterMethods" is-config="true" duration-ms="0" started-at="2023-07-21T18:08:27 IST" finished-at="2023-07-21T18:08:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=postCreateUserWithString status=FAILURE method=PostTests.postCreateUserWithString()[pri:0, instance:com.qa.tests.PostTests@34c4973] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method status="PASS" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:com.qa.tests.PostTests@34c4973]" name="afterMethods" is-config="true" duration-ms="1" started-at="2023-07-21T18:08:27 IST" finished-at="2023-07-21T18:08:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=postCreateUserJsonObject status=SUCCESS method=PostTests.postCreateUserJsonObject()[pri:0, instance:com.qa.tests.PostTests@34c4973] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method status="PASS" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:com.qa.tests.PostTests@34c4973]" name="afterMethods" is-config="true" duration-ms="0" started-at="2023-07-21T18:08:27 IST" finished-at="2023-07-21T18:08:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=postCreateUserWithMap status=SUCCESS method=PostTests.postCreateUserWithMap()[pri:0, instance:com.qa.tests.PostTests@34c4973] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method status="PASS" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:com.qa.tests.PostTests@34c4973]" name="afterMethods" is-config="true" duration-ms="1" started-at="2023-07-21T18:08:28 IST" finished-at="2023-07-21T18:08:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=postCreateUserPojo status=SUCCESS method=PostTests.postCreateUserPojo()[pri:0, instance:com.qa.tests.PostTests@34c4973] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
      </class> <!-- com.qa.tests.PostTests -->
      <class name="com.qa.tests.GetTests">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.GetTests.getPostsWithQueryParameter()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.GetTests.getComments()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.GetTests.getUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.GetTests.getPostsWithBasePath()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.GetTests.getIndividualCommentsForUser(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getPostsWithBasePath()[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="getPostsWithBasePath" duration-ms="5827" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostsWithBasePath -->
        <test-method status="FAIL" signature="getUser()[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="getUser" duration-ms="5831" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:25 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expecting
  com.qa.pojo.User@72f62e7b
to have a property or a field named "id" with value
  "3708305"
but value was:
  "3778659"
(static and synthetic fields are ignored)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expecting
  com.qa.pojo.User@72f62e7b
to have a property or a field named "id" with value
  "3708305"
but value was:
  "3778659"
(static and synthetic fields are ignored)
at com.qa.tests.GetTests.getUser(GetTests.java:75)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUser -->
        <test-method status="PASS" signature="getComments()[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="getComments" duration-ms="5824" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getComments -->
        <test-method status="FAIL" signature="getIndividualCommentsForUser(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="getIndividualCommentsForUser" duration-ms="5598" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.GetTests.getIndividualCommentsForUser(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expecting actual not to be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expecting actual not to be empty
at com.qa.tests.GetTests.getIndividualCommentsForUser(GetTests.java:150)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getIndividualCommentsForUser -->
        <test-method status="PASS" signature="getPostsWithQueryParameter()[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="getPostsWithQueryParameter" duration-ms="5844" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPostsWithQueryParameter -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.GetTests.getUsers(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getUsers(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="getUsers" duration-ms="1854" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.GetTests.getUsers(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUsers -->
        <test-method status="PASS" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="afterMethods" is-config="true" duration-ms="0" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getIndividualCommentsForUser status=FAILURE method=GetTests.getIndividualCommentsForUser(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method status="PASS" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="afterMethods" is-config="true" duration-ms="0" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getComments status=SUCCESS method=GetTests.getComments()[pri:0, instance:com.qa.tests.GetTests@33c7e1bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method status="PASS" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="afterMethods" is-config="true" duration-ms="0" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPostsWithBasePath status=SUCCESS method=GetTests.getPostsWithBasePath()[pri:0, instance:com.qa.tests.GetTests@33c7e1bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method status="PASS" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="afterMethods" is-config="true" duration-ms="0" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getUser status=FAILURE method=GetTests.getUser()[pri:0, instance:com.qa.tests.GetTests@33c7e1bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method status="PASS" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="afterMethods" is-config="true" duration-ms="1" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getPostsWithQueryParameter status=SUCCESS method=GetTests.getPostsWithQueryParameter()[pri:0, instance:com.qa.tests.GetTests@33c7e1bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method status="PASS" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb]" name="afterMethods" is-config="true" duration-ms="0" started-at="2023-07-21T18:08:27 IST" finished-at="2023-07-21T18:08:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getUsers status=SUCCESS method=GetTests.getUsers(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.GetTests@33c7e1bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
      </class> <!-- com.qa.tests.GetTests -->
      <class name="com.qa.tests.DeleteTests">
        <test-method status="PASS" signature="setUpSuite()[pri:0, instance:com.qa.tests.DeleteTests@30a3107a]" name="setUpSuite" is-config="true" duration-ms="7" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSuite -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.DeleteTests@30a3107a]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.DeleteTests.deleteUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="deleteUser()[pri:0, instance:com.qa.tests.DeleteTests@30a3107a]" name="deleteUser" duration-ms="5526" started-at="2023-07-21T18:08:19 IST" finished-at="2023-07-21T18:08:25 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <204> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <204> but was <404>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$11.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validate(ResponseSpecificationImpl.groovy:101)
at io.restassured.internal.ValidatableResponseOptionsImpl.spec(ValidatableResponseOptionsImpl.java:288)
at com.qa.tests.DeleteTests.deleteUser(DeleteTests.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method status="PASS" signature="afterMethods(org.testng.ITestResult)[pri:0, instance:com.qa.tests.DeleteTests@30a3107a]" name="afterMethods" is-config="true" duration-ms="0" started-at="2023-07-21T18:08:25 IST" finished-at="2023-07-21T18:08:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteUser status=FAILURE method=DeleteTests.deleteUser()[pri:0, instance:com.qa.tests.DeleteTests@30a3107a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethods -->
        <test-method status="PASS" signature="tearDownSuite()[pri:0, instance:com.qa.tests.DeleteTests@30a3107a]" name="tearDownSuite" is-config="true" duration-ms="0" started-at="2023-07-21T18:08:28 IST" finished-at="2023-07-21T18:08:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownSuite -->
      </class> <!-- com.qa.tests.DeleteTests -->
    </test> <!-- Test Basics 1 -->
  </suite> <!-- rest assured Practice Suite -->
</testng-results>
